// <auto-generated />
using System;
using Kurs.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kurs.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20250307212802_first-migration")]
    partial class firstmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Kurs.Models.Course", b =>
                {
                    b.Property<int>("CourseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CourseID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DurationHours")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("CourseID");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseID = 1,
                            Description = "training on Monday Wednesday Friday evenings.",
                            DurationHours = 40,
                            Price = 99.99m,
                            Title = "evening enhanced"
                        },
                        new
                        {
                            CourseID = 2,
                            Description = "training on Saturday and Sunday",
                            DurationHours = 60,
                            Price = 199.99m,
                            Title = "weekend"
                        });
                });

            modelBuilder.Entity("Kurs.Models.Group", b =>
                {
                    b.Property<int>("GroupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("GroupID"));

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("MaxStudents")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.HasKey("GroupID");

                    b.HasIndex("CourseID");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            GroupID = 1,
                            CourseID = 1,
                            EndDate = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxStudents = 20,
                            Name = "Group A",
                            StartDate = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentID = 0
                        },
                        new
                        {
                            GroupID = 2,
                            CourseID = 2,
                            EndDate = new DateTime(2025, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxStudents = 15,
                            Name = "Group B",
                            StartDate = new DateTime(2025, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentID = 0
                        });
                });

            modelBuilder.Entity("Kurs.Models.Instructor", b =>
                {
                    b.Property<int>("InstructorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("InstructorID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("ExperienceYears")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("InstructorID");

                    b.ToTable("Instructors");

                    b.HasData(
                        new
                        {
                            InstructorID = 1,
                            Address = "123 Main St",
                            DateOfBirth = new DateTime(1980, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "john.doe@example.com",
                            ExperienceYears = 10,
                            FirstName = "John",
                            LastName = "Doe",
                            MiddleName = "Michael",
                            Phone = "555-123-4567"
                        },
                        new
                        {
                            InstructorID = 2,
                            Address = "456 Oak Ave",
                            DateOfBirth = new DateTime(1985, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jane.smith@example.com",
                            ExperienceYears = 5,
                            FirstName = "Jane",
                            LastName = "Smith",
                            MiddleName = "Elizabeth",
                            Phone = "555-987-6543"
                        });
                });

            modelBuilder.Entity("Kurs.Models.Lesson", b =>
                {
                    b.Property<int>("LessonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("LessonID"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("GroupID")
                        .HasColumnType("int");

                    b.Property<int>("InstructorID")
                        .HasColumnType("int");

                    b.Property<string>("LessonType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("LessonID");

                    b.HasIndex("GroupID");

                    b.HasIndex("InstructorID");

                    b.ToTable("Lessons");

                    b.HasData(
                        new
                        {
                            LessonID = 1,
                            DateTime = new DateTime(2025, 4, 5, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Introduction to C# basics",
                            GroupID = 1,
                            InstructorID = 1,
                            LessonType = "Lecture"
                        },
                        new
                        {
                            LessonID = 2,
                            DateTime = new DateTime(2025, 5, 8, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Hands-on practice with advanced C# features",
                            GroupID = 2,
                            InstructorID = 2,
                            LessonType = "Lab"
                        });
                });

            modelBuilder.Entity("Kurs.Models.Student", b =>
                {
                    b.Property<int>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("StudentID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("GroupID")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("StudentID");

                    b.HasIndex("GroupID");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentID = 1,
                            Address = "789 Pine Ln",
                            DateOfBirth = new DateTime(2000, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "alice.johnson@example.com",
                            FirstName = "Alice",
                            GroupID = 1,
                            LastName = "Johnson",
                            MiddleName = "Marie",
                            Phone = "555-555-1212"
                        },
                        new
                        {
                            StudentID = 2,
                            Address = "101 Oak St",
                            DateOfBirth = new DateTime(1999, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "bob.williams@example.com",
                            FirstName = "Bob",
                            GroupID = 2,
                            LastName = "Williams",
                            MiddleName = "Robert",
                            Phone = "555-555-3434"
                        });
                });

            modelBuilder.Entity("Kurs.Models.Group", b =>
                {
                    b.HasOne("Kurs.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Kurs.Models.Lesson", b =>
                {
                    b.HasOne("Kurs.Models.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kurs.Models.Instructor", "Instructor")
                        .WithMany()
                        .HasForeignKey("InstructorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("Kurs.Models.Student", b =>
                {
                    b.HasOne("Kurs.Models.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });
#pragma warning restore 612, 618
        }
    }
}
